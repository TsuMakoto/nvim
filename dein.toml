# -------------------------------------------------- パッケージ管理
[[plugins]]
repo = 'Shougo/dein.vim'

# -------------------------------------------------- ファイル検索
[[plugins]]
repo = 'ctrlpvim/ctrlp.vim'

# -------------------------------------------------- ファイルエクスプローラー
[[plugins]]
repo = 'scrooloose/nerdtree'

# -------------------------------------------------- gitterの表示
[[plugins]]
repo = 'airblade/vim-gitgutter'

# -------------------------------------------------- かっこ補完
[[plugins]]
repo = 'cohama/lexima.vim'
hook_add = 'let g:lexima_enable_basic_rules = 1'

# -------------------------------------------------- gtag
# [[plugins]]
# repo = 'jsfaint/gen_tags.vim'
# hook_add = 'g:gen_tags#gtags_default_map'

# -------------------------------------------------- airline
[[plugins]]
repo = 'vim-airline/vim-airline'
hook_add = "let g:airline_powerline_fonts = 1"
hook_add = "set laststatus=2"

# -------------------------------------------------- indent
[[plugins]]
repo = 'Yggdroot/indentLine'

# -------------------------------------------------- send terminal
[[plugins]]
repo = 'kkpmw/vim-sendtowindow'

# -------------------------------------------------- 日本語
[[plugins]]
repo = 'tyru/eskk.vim'
hook_add = '''
  let g:eskk#directory = "~/.eskk"
  let g:eskk#dictionary = {
  \    'path': "~/.dotfiles/.skk-jisyo",
  \    'sorted': 0,
  \    'encoding': 'utf-8',
  \  }
  let g:eskk#large_dictionary = {
  \    'path': "~/.eskk/SKK-JISYO.L",
  \    'sorted': 1,
  \    'encoding': 'euc-jp',
  \  }
  let g:eskk#enable_completion = 1
  let g:eskk#server = {
  \    'host': 'localhost',
  \    'port': 55100,
  \  }
'''

# -------------------------------------------------- 検索機能
[[plugins]]
repo = 'easymotion/vim-easymotion'
hook_add = '''
    map <Leader> <Plug>(easymotion-prefix)
    let g:EasyMotion_do_mapping = 0 " Disable default mappings

    " Jump to anywhere you want with minimal keystrokes, with just one key binding.
    " `s{char}{label}`
    " nmap s <Plug>(easymotion-overwin-f)
    " or
    " `s{char}{char}{label}`
    " Need one more keystroke, but on average, it may be more comfortable.
    nmap s <Plug>(easymotion-overwin-f2)

    " Turn on case insensitive feature
    let g:EasyMotion_smartcase = 1

    " JK motions: Line motions
    map <Leader>j <Plug>(easymotion-j)
    map <Leader>k <Plug>(easymotion-k)
'''

# -------------------------------------------------- deoplete
[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_add = 'let g:deoplete#enable_at_startup = 1'

# -------------------------------------------------- Rails補完
[[plugins]]
repo = 'tpope/vim-rails'

# -------------------------------------------------- Ruby補完
[[plugins]]
repo = 'takkii/Bignyanco'

# -------------------------------------------------- python補完
[[plugins]]
repo = 'zchee/deoplete-jedi'

# -------------------------------------------------- javascript補完
[[plugins]]
repo = 'wokalski/autocomplete-flow'

# -------------------------------------------------- html補完
[[plugins]]
repo = 'mattn/emmet-vim'
hook_add = '''
  let g:user_emmet_leader_key='<C-E>'
'''

# -------------------------------------------------- bootstrap4補完
[[plugins]]
repo = 'jvanja/vim-bootstrap4-snippets'

# -------------------------------------------------- mathematica補完
[[plugins]]
repo = 'voldikss/vim-mma'

# -------------------------------------------------- vimscript補完
[[plugins]]
repo = 'Shougo/neco-vim'

# -------------------------------------------------- Julia補完
[[plugins]]
repo = 'JuliaEditorSupport/julia-vim'

# -------------------------------------------------- tabnine
[[plugins]]
repo = 'tbodt/deoplete-tabnine'
build = './install.sh'
hook_add = '''
  call deoplete#custom#var('tabnine', {
  \ 'line_limit': 500,
  \ 'max_num_results': 20,
  \ })
'''

# -------------------------------------------------- dependency coquill
[[plugins]]
repo = "let-def/vimbufsync"
on_ft = "coq"

# -------------------------------------------------- coq IDE
[[plugins]]
repo = "the-lambda-church/coquille"
on_ft = "coq"
depends = ["vimbufsync"]
hook_source = """
  nmap <silent> <C-c><C-l> :CoqLaunch<CR>
  nmap <silent> <C-c><C-n> :CoqNext<CR>
  nmap <silent> <C-c><C-u> :CoqUndo<CR>
  nmap <silent> <C-c><C-c> :CoqToCursor<CR>
"""

# -------------------------------------------------- htmlバリデーター
[[plugins]]
repo = 'hokaccha/vim-html5validator'

# -------------------------------------------------- Julia color scheme
[[plugins]]
repo = 'jacoborus/tender.vim'
hook_add = '''
  " If you have vim >=8.0 or Neovim >= 0.1.5
  if (has("termguicolors"))
    set termguicolors
  endif

  " For Neovim 0.1.3 and 0.1.4
  let $NVIM_TUI_ENABLE_TRUE_COLOR=1
'''

# -------------------------------------------------- mathematica color scheme
[[plugins]]
repo = 'rsmenon/vim-mathematica'

# -------------------------------------------------- coffee script color scheme
[[plugins]]
repo = 'kchmck/vim-coffee-script'

# -------------------------------------------------- type script color scheme
[[plugins]]
repo = 'leafgarland/typescript-vim'

# -------------------------------------------------- vue color scheme
[[plugins]]
repo = 'posva/vim-vue'

# ------------------------------------------------ <Leader>c + なんかでコメントできるやーつ
[[plugins]]
repo = 'scrooloose/nerdcommenter'
hook_source = '''
  execute 'source' (g:config_dir . '/plugins/vue.vim')
'''
lazy = '1'

# -------------------------------------------------- markdownのテーブル
[[plugins]]
repo = 'dhruvasagar/vim-table-mode'
lazy = '1'
hook_add = 'let g:table_mode_corner="|"'

# -------------------------------------------------- 非同期処理を実現
[[plugins]]
repo = 'Shougo/vimproc.vim'
lazy = '1'
build = 'make'

# -------------------------------------------------- quickrun
[[plugins]]
repo = 'thinca/vim-quickrun'
lazy = '1'
depends = ['vimproc.vim']
on_ft = ['python', 'ruby']
hook_add = '''
  " Running vimproc
  " Showing success is buffer and error is quickfix
  let g:quickrun_config = {
    \ '_' : {
      \ 'runner' : 'vimproc',
      \ 'runner/vimproc/updatetime' : 40,
      \ 'outputter' : 'error',
      \ 'outputter/error/success' : 'buffer',
      \ 'outputter/error/error'   : 'quickfix',
      \ 'outputter/buffer/split' : ':botright 8sp',
      \ }
    \}
  " Close quickfix is [q]
    au FileType qf nnoremap <silent><buffer>q :quit<CR>
    " Keymap
    let g:quickrun_no_default_key_mappings = 1
    " Running with close quickfix and save file
    nnoremap <Leader>r :cclose<CR>:write<CR>:QuickRun -mode n<CR>
    xnoremap <Leader>r :<C-U>cclose<CR>:write<CR>gv:QuickRun -mode v<CR>
    " Stop quickrun is [C-c]
    nnoremap <expr><silent> <C-c> quickrun#is_running() ? quickrun#sweep_sessions() : "\<C-c>"
'''

# -------------------------------------------------- linter実行
[[plugins]]
repo = 'w0rp/ale'
lazy = '1'
on_ft = ['python', 'html', 'css', 'javascript', 'ruby', 'dockerfile']
hook_source = '''
  execute 'source' (g:config_dir . '/plugins/ale.vim')
'''
